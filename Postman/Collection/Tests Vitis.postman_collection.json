{
	"info": {
		"name": "Tests Vitis",
		"_postman_id": "f107db0e-5b05-2457-0c73-979f9a656b0b",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Vitis",
			"description": "Tests de l'API Vitis",
			"item": [
				{
					"name": "Admin connection",
					"item": [
						{
							"name": "Get private token (Admin)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "100054ce-0bc3-4905-9200-9c6fc0cfe51b",
										"type": "text/javascript",
										"exec": [
											"// Test la présence de réponse",
											"if(pm.response.responseSize === 0){",
											"    tests['No response'] = false",
											"    return null;",
											"}",
											"",
											"// Tests contenu",
											"var jsonData = pm.response.json();",
											"tests[\"token is ok\"] = typeof(jsonData.token) === \"string\";",
											"tests[\"user is ok\"] = typeof(jsonData.user) === \"string\";",
											"tests[\"validity_date is ok\"] = typeof(jsonData.validity_date) === \"string\";",
											"tests[\"user_id is ok\"] = typeof(jsonData.user_id) === \"number\";",
											"tests[\"privileges is ok\"] = jsonData.privileges instanceof Array",
											"",
											"// Variables",
											"pm.environment.set(\"main_token\", jsonData.token);",
											"pm.environment.set(\"main_admin_id\",jsonData.user_id);",
											"",
											"// Passe directement à la requête Get token",
											"// postman.setNextRequest(\"Get token\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6bd8e739-8151-4208-97aa-a70ed4f78467",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"error_test\", false);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml, application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "user",
											"type": "text",
											"value": "{{admin_user}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{admin_password}}"
										},
										{
											"key": "duration",
											"type": "text",
											"value": "600"
										}
									]
								},
								"url": {
									"raw": "https://{{host}}/rest/vitis/privatetoken",
									"protocol": "https",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"vitis",
										"privatetoken"
									]
								},
								"description": "Request to get a token"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"id": "34681e5a-c7db-4ab3-99b9-ac86748c85cd",
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"id": "e4eb9985-0c52-4ca9-9989-026ea67c5cd4",
								"type": "text/javascript"
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "User Start",
					"item": [
						{
							"name": "Get private token (User)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test la présence de réponse",
											"if(pm.response.responseSize === 0){",
											"    tests['No response'] = false",
											"    return null;",
											"}",
											"",
											"// Tests contenu",
											"var jsonData = pm.response.json();",
											"tests[\"token is ok\"] = typeof(jsonData.token) === \"string\";",
											"tests[\"user is ok\"] = typeof(jsonData.user) === \"string\";",
											"tests[\"validity_date is ok\"] = typeof(jsonData.validity_date) === \"string\";",
											"tests[\"user_id is ok\"] = typeof(jsonData.user_id) === \"number\";",
											"tests[\"privileges is ok\"] = jsonData.privileges instanceof Array",
											"",
											"// Variables",
											"pm.environment.set(\"main_user_token\", jsonData.token);",
											"pm.environment.set(\"main_user_id\",jsonData.user_id);",
											"",
											"// Passe directement à la requête Get token",
											"// postman.setNextRequest(\"Get token\");"
										],
										"id": "85a09737-c871-436d-a5dd-bdfe9ac56a9c",
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"error_test\", false);"
										],
										"id": "6bd8e739-8151-4208-97aa-a70ed4f78467",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml, application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "user",
											"type": "text",
											"value": "{{user_user}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{user_password}}"
										},
										{
											"key": "duration",
											"type": "text",
											"value": "600"
										}
									]
								},
								"url": {
									"raw": "https://{{host}}/rest/vitis/privatetoken",
									"protocol": "https",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"vitis",
										"privatetoken"
									]
								},
								"description": "Request to get a token"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"id": "a26d5104-9265-4758-973e-d03c7bc878cd",
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"id": "4979f18b-6990-40e6-be0a-43e4dace8015",
								"type": "text/javascript"
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Main",
					"item": [
						{
							"name": "Private token",
							"item": [
								{
									"name": "Get token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e24ce0df-f71c-4887-b981-8cd3a5322654",
												"type": "text/javascript",
												"exec": [
													"// Test la présence de réponse",
													"if(pm.response.responseSize === 0){",
													"    tests['No response'] = false;",
													"    return null;",
													"}",
													"",
													"// Tests contenu",
													"var jsonData = pm.response.json();",
													"tests[\"token is ok\"] = typeof(jsonData.token) === \"string\";",
													"tests[\"user is ok\"] = typeof(jsonData.user) === \"string\";",
													"tests[\"validity_date is ok\"] = typeof(jsonData.validity_date) === \"string\";",
													"tests[\"user_id is ok\"] = typeof(jsonData.user_id) === \"number\";",
													"tests[\"privileges is ok\"] = jsonData.privileges instanceof Array;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/xml, application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {},
										"url": {
											"raw": "https://{{host}}/rest/vitis/privatetoken?token={{main_token}}",
											"protocol": "https",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"vitis",
												"privatetoken"
											],
											"query": [
												{
													"key": "token",
													"value": "{{main_token}}",
													"equals": true
												}
											]
										},
										"description": "Request to get a token"
									},
									"response": []
								},
								{
									"name": "Get public token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Test la présence de réponse",
													"if(pm.response.responseSize === 0){",
													"    tests['No response'] = false",
													"    return null;",
													"}"
												],
												"id": "a5f8ebf4-5375-456c-af97-d4a64a8b8c7e",
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/xml, application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{host}}/rest/vitis/publictoken",
											"protocol": "https",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"vitis",
												"publictoken"
											]
										},
										"description": "Request to get a token"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "84fb9c18-5ae0-4e1b-b43a-12d1a9e27be5",
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"id": "792c887e-59d6-4361-b5bb-42888be68284",
										"type": "text/javascript"
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Users",
							"item": [
								{
									"name": "Add User",
									"item": [
										{
											"name": "Add User",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6486d7b0-47c7-4fce-abed-67cbf9e557ae",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"user_id is ok\"] = typeof(jsonData.user_id) === \"number\";",
															"",
															"// Variables d'environnement",
															"pm.environment.set(\"main_user_id\", jsonData.user_id);"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "5867ae04-2e7c-4a99-b969-9dfdfb3fd2c0",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_user_login\", \"test_main_user\");",
															"pm.environment.set(\"main_user_name\", \"test main user\");",
															"pm.environment.set(\"main_user_password\", \"test_main_user\");",
															"pm.environment.set(\"main_user_password_confirm\", \"test_main_user\");",
															"pm.environment.set(\"main_user_email\",\"test_main_user@test.com\");",
															"pm.environment.set(\"main_user_company\",\"test company\");",
															"pm.environment.set(\"main_user_department\",\"test departement\");",
															"pm.environment.set(\"main_user_groups\", pm.environment.get(\"groups\"));",
															"pm.environment.set(\"main_user_action\", \"\");",
															"pm.environment.set(\"main_user_ip_constraint\", \"\");",
															"pm.environment.set(\"main_user_restriction\", \"%\");",
															"pm.environment.set(\"main_user_privileges\",\"vitis_user\");"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "token",
															"type": "text",
															"value": "{{main_token}}"
														},
														{
															"key": "login",
															"type": "text",
															"value": "{{main_user_login}}"
														},
														{
															"key": "action",
															"type": "text",
															"value": "{{main_user_action}}"
														},
														{
															"key": "name",
															"type": "text",
															"value": "{{main_user_name}}"
														},
														{
															"key": "email",
															"type": "text",
															"value": "{{main_user_email}}"
														},
														{
															"key": "company",
															"type": "text",
															"value": "{{main_user_company}}"
														},
														{
															"key": "department",
															"type": "text",
															"value": "{{main_user_department}}"
														},
														{
															"key": "groups",
															"type": "text",
															"value": "{{main_user_groups}}"
														},
														{
															"key": "privileges",
															"type": "text",
															"value": "{{main_user_privileges}}"
														},
														{
															"key": "ip_constraint",
															"type": "text",
															"value": "{{main_user_ip_constraint}}"
														},
														{
															"key": "password",
															"type": "text",
															"value": "{{main_user_password}}"
														},
														{
															"key": "password_confirm",
															"type": "text",
															"value": "{{main_user_password_confirm}}"
														},
														{
															"key": "restriction",
															"type": "text",
															"value": "{{main_user_restriction}}"
														}
													]
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users"
													]
												},
												"description": "Test: Ajoute l'utilisateur Basic_user"
											},
											"response": []
										},
										{
											"name": "Test Add user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "93cdeb49-a45b-4706-8adc-8bca176b53e3",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"users is ok\"] = jsonData.users instanceof Array;",
															"tests[\"users get is ok\"] = jsonData.users.length === 1;",
															"tests[\"user_id is ok\"] = jsonData.users[0].user_id === parseInt(pm.environment.get(\"main_user_id\"));",
															"tests[\"login is ok\"] = jsonData.users[0].login === pm.environment.get(\"main_user_login\");",
															"tests[\"name is ok\"] = jsonData.users[0].name === pm.environment.get(\"main_user_name\");",
															"tests[\"email is ok\"] = jsonData.users[0].email === pm.environment.get(\"main_user_email\");   ",
															"tests[\"company is ok\"] = jsonData.users[0].company === pm.environment.get(\"main_user_company\");",
															"tests[\"department is ok\"] = jsonData.users[0].department === pm.environment.get(\"main_user_department\");",
															"tests[\"ip_constraint is ok\"] = jsonData.users[0].ip_constraint === pm.environment.get(\"main_user_ip_constraint\");",
															"tests[\"restriction is ok\"] = jsonData.users[0].restriction === pm.environment.get(\"main_user_restriction\");",
															"tests[\"groups is ok\"] = jsonData.users[0].groups === pm.environment.get(\"main_user_groups\");",
															"tests[\"privileges is ok\"] = jsonData.users[0].privileges === pm.environment.get(\"main_user_privileges\");",
															"",
															"// Nettoyage variables ",
															"pm.environment.unset(\"main_user_attributes\");",
															""
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d59d8802-00a7-4a9e-83ff-79b93b2a19d4",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_user_attributes\", \"\");"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&attributs={{main_user_attributes}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users",
														":user_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{main_user_attributes}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{main_user_id}}"
														}
													]
												},
												"description": "Test: vérifie le précédent PUT"
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Get User",
									"item": [
										{
											"name": "Get User",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2b7c2beb-c1c4-4070-a939-e9463540cf22",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"users is ok\"] = jsonData.users instanceof Array",
															"tests[\"users get is ok\"] = jsonData.users.length === 1;",
															"tests[\"user_id is ok\"] = jsonData.users[0].user_id === parseInt(pm.environment.get(\"main_user_id\"));",
															"tests[\"login is ok\"] = jsonData.users[0].login === pm.environment.get(\"main_user_login\");",
															"tests[\"name is ok\"] = jsonData.users[0].name === pm.environment.get(\"main_user_name\");",
															"tests[\"email is ok\"] = jsonData.users[0].email === pm.environment.get(\"main_user_email\");   ",
															"tests[\"company is ok\"] = jsonData.users[0].company === pm.environment.get(\"main_user_company\");",
															"tests[\"department is ok\"] = jsonData.users[0].department === pm.environment.get(\"main_user_department\");",
															"tests[\"ip_constraint is ok\"] = jsonData.users[0].ip_constraint === pm.environment.get(\"main_user_ip_constraint\");",
															"tests[\"restriction is ok\"] = jsonData.users[0].restriction === pm.environment.get(\"main_user_restriction\");",
															"tests[\"groups is ok\"] = jsonData.users[0].groups === pm.environment.get(\"main_user_groups\");",
															"tests[\"privileges is ok\"] = jsonData.users[0].privileges === pm.environment.get(\"main_user_privileges\");",
															"",
															"// Nettoyage variables ",
															"pm.environment.unset(\"main_user_attributes\");",
															""
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d59d8802-00a7-4a9e-83ff-79b93b2a19d4",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_user_attributes\", \"\");"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&attributs={{main_user_attributes}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users",
														":user_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{main_user_attributes}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{main_user_id}}"
														}
													]
												},
												"description": "Test: vérifie le précédent PUT"
											},
											"response": []
										},
										{
											"name": "Get Users",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9e0aa723-42c5-4d2f-952a-d6ef58feb782",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"users is ok\"] = jsonData.users instanceof Array",
															"",
															"",
															"var iTest = pm.environment.get(\"get_users_test_number\");",
															"iTest = typeof(iTest) !== \"undefined\" ? parseInt(iTest) : 0;",
															"",
															"// Nettoyage variables ",
															"pm.environment.unset(\"main_user_attributes\");",
															"pm.environment.unset(\"get_users_order_by\");",
															"pm.environment.unset(\"get_users_sort_order\");",
															"pm.environment.unset(\"get_users_limit\");",
															"pm.environment.unset(\"get_users_offset\");",
															"pm.environment.unset(\"get_users_attributs\");",
															"pm.environment.unset(\"get_users_filter\");",
															"pm.environment.unset(\"get_users_distinct\");",
															"",
															"",
															"tests[\"iTest: \"+iTest] = true;",
															"tests[\"users get is ok\"] = jsonData.users.length > 0;",
															"",
															"// Tests de routine",
															"// order_by",
															"if (iTest === 1){",
															"    var aUserNames = [];",
															"    for (var i = 0; i < jsonData.users.length; i++) {",
															"        aUserNames.push(jsonData.users[i]['name'])",
															"    }",
															"    var aUserNamesClone = aUserNames.slice(0);",
															"    aUserNames.sort();",
															"    tests[\"order_by is ok\"] = JSON.stringify(aUserNames) == JSON.stringify(aUserNamesClone);",
															"}",
															"// sort_order",
															"if (iTest === 2){",
															"    var aUserNames = [];",
															"    for (var i = 0; i < jsonData.users.length; i++) {",
															"        aUserNames.push(jsonData.users[i]['name'])",
															"    }",
															"    var aUserNamesClone = aUserNames.slice(0);",
															"    aUserNames.reverse();",
															"    tests[\"sort_order is ok\"] = JSON.stringify(aUserNames) == JSON.stringify(aUserNamesClone);",
															"}",
															"// limit",
															"if (iTest === 3){",
															"    tests[\"limit is ok\"] = jsonData.users.length == 1;",
															"}",
															"// offset",
															"if (iTest === 4){",
															"    // Reste à tester",
															"    tests[\"offset is ok\"] = false;",
															"}",
															"// attributs",
															"if (iTest === 5){",
															"    tests[\"attributs is ok\"] = Object.keys(jsonData.users[0]).length == 2;",
															"}",
															"// filter",
															"if (iTest === 6){",
															"    tests[\"filter is ok\"] = jsonData.users.length == 1;",
															"}",
															"// distinct",
															"if (iTest === 7){",
															"    // Reste à tester",
															"    tests[\"distinct is ok\"] = false;",
															"}",
															"",
															"// Routine de test",
															"if (iTest === 0){",
															"    pm.environment.set(\"get_users_order_by\", \"name\");",
															"    pm.environment.set(\"get_users_test_number\", iTest + 1);",
															"    postman.setNextRequest(\"Get Users\");",
															"} else if (iTest === 1){",
															"    pm.environment.set(\"get_users_sort_order\", \"DESC\");",
															"    pm.environment.set(\"get_users_test_number\", iTest + 1);",
															"    postman.setNextRequest(\"Get Users\");",
															"} else if (iTest === 2){",
															"    pm.environment.set(\"get_users_limit\", \"1\");",
															"    pm.environment.set(\"get_users_test_number\", iTest + 1);",
															"    postman.setNextRequest(\"Get Users\");    ",
															"} else if (iTest === 3){",
															"    pm.environment.set(\"get_users_offset\", \"\");",
															"    pm.environment.set(\"get_users_test_number\", iTest + 1);",
															"    postman.setNextRequest(\"Get Users\");    ",
															"} else if (iTest === 4){",
															"    pm.environment.set(\"get_users_attributs\", \"user_id|login\");",
															"    pm.environment.set(\"get_users_test_number\", iTest + 1);",
															"    postman.setNextRequest(\"Get Users\");    ",
															"} else if (iTest === 5){",
															"    pm.environment.set(\"get_users_filter\", JSON.stringify({'column':'login', 'compare_operator': '=', 'value': pm.environment.get(\"main_user_login\")}));",
															"    pm.environment.set(\"get_users_test_number\", iTest + 1);",
															"    postman.setNextRequest(\"Get Users\");    ",
															"} else if (iTest === 6){",
															"    pm.environment.set(\"get_users_distinct\", \"\");",
															"    pm.environment.set(\"get_users_test_number\", iTest + 1);",
															"    postman.setNextRequest(\"Get Users\");    ",
															"} else {",
															"    pm.environment.unset(\"get_users_test_number\");",
															"}",
															""
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "70eb3640-d9e4-4570-a7c2-0c9ecddc2366",
														"type": "text/javascript",
														"exec": [
															"",
															"if(typeof(pm.environment.get(\"main_user_attributes\")) == \"undefined\")",
															"\tpm.environment.set(\"main_user_attributes\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_users_order_by\")) == \"undefined\")",
															"\tpm.environment.set(\"get_users_order_by\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_users_sort_order\")) == \"undefined\")",
															"\tpm.environment.set(\"get_users_sort_order\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_users_limit\")) == \"undefined\")",
															"\tpm.environment.set(\"get_users_limit\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_users_offset\")) == \"undefined\")",
															"\tpm.environment.set(\"get_users_offset\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_users_attributs\")) == \"undefined\")",
															"\tpm.environment.set(\"get_users_attributs\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_users_filter\")) == \"undefined\")",
															"\tpm.environment.set(\"get_users_filter\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_users_distinct\")) == \"undefined\")",
															"\tpm.environment.set(\"get_users_distinct\", \"\");"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users/?token={{main_token}}&order_by={{get_users_order_by}}&sort_order={{get_users_sort_order}}&limit={{get_users_limit}}&offset={{get_users_offset}}&attributs={{get_users_attributs}}&filter={{get_users_filter}}&distinct={{get_users_distinct}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users",
														""
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "order_by",
															"value": "{{get_users_order_by}}",
															"equals": true
														},
														{
															"key": "sort_order",
															"value": "{{get_users_sort_order}}",
															"equals": true
														},
														{
															"key": "limit",
															"value": "{{get_users_limit}}",
															"equals": true
														},
														{
															"key": "offset",
															"value": "{{get_users_offset}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{get_users_attributs}}",
															"equals": true
														},
														{
															"key": "filter",
															"value": "{{get_users_filter}}",
															"equals": true
														},
														{
															"key": "distinct",
															"value": "{{get_users_distinct}}",
															"equals": true
														}
													]
												},
												"description": "Test: vérifie le précédent PUT"
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Edit User",
									"item": [
										{
											"name": "Simple attributes",
											"item": [
												{
													"name": "Update User",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "2ee5bf40-1bfd-4cb5-8130-4e18387e4d5b",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"main_user_name\", \"test main user edited\");",
																	"pm.environment.set(\"main_user_email\",\"test_main_user_edited@test.com\");",
																	"pm.environment.set(\"main_user_company\",\"test company edited\");",
																	"pm.environment.set(\"main_user_department\",\"test departement edited\");",
																	"// pm.environment.set(\"main_user_groups\", \"\");",
																	"// pm.environment.set(\"main_user_action\", \"\");",
																	"pm.environment.set(\"main_user_ip_constraint\", \"\");",
																	"pm.environment.set(\"main_user_restriction\", \"%\");",
																	"pm.environment.set(\"main_user_privileges\",\"vitis_user|vitis_admin\");",
																	"",
																	"",
																	""
																]
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "91834f0d-efad-454b-8a78-fe531741e29e",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"user_id is ok\"] = typeof(jsonData.user_id) === \"string\";"
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json, application/x-vm-json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {},
														"url": {
															"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&name={{main_user_name}}&email={{main_user_email}}&company={{main_user_company}}&department={{main_user_department}}&groups={{main_user_groups}}&privileges={{main_user_privileges}}&ip_constraint={{main_user_ip_constraint}}&restriction={{main_user_restriction}}",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"users",
																":user_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "login",
																	"value": "{{login}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "name",
																	"value": "{{main_user_name}}",
																	"equals": true
																},
																{
																	"key": "email",
																	"value": "{{main_user_email}}",
																	"equals": true
																},
																{
																	"key": "company",
																	"value": "{{main_user_company}}",
																	"equals": true
																},
																{
																	"key": "department",
																	"value": "{{main_user_department}}",
																	"equals": true
																},
																{
																	"key": "groups",
																	"value": "{{main_user_groups}}",
																	"equals": true
																},
																{
																	"key": "privileges",
																	"value": "{{main_user_privileges}}",
																	"equals": true
																},
																{
																	"key": "ip_constraint",
																	"value": "{{main_user_ip_constraint}}",
																	"equals": true
																},
																{
																	"key": "password",
																	"value": "{{password}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "password_confirm",
																	"value": "{{password_confirm}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "restriction",
																	"value": "{{main_user_restriction}}",
																	"equals": true
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{main_user_id}}"
																}
															]
														},
														"description": "Request to update User"
													},
													"response": []
												},
												{
													"name": "Test update user",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "5169e31d-6ee9-46c9-bd54-d51daedaed9e",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"users is ok\"] = jsonData.users instanceof Array",
																	"tests[\"users get is ok\"] = jsonData.users.length === 1;",
																	"tests[\"user_id is ok\"] = jsonData.users[0].user_id === parseInt(pm.environment.get(\"main_user_id\"));",
																	"tests[\"name is ok\"] = jsonData.users[0].name === pm.environment.get(\"main_user_name\");",
																	"tests[\"email is ok\"] = jsonData.users[0].email === pm.environment.get(\"main_user_email\");   ",
																	"tests[\"company is ok\"] = jsonData.users[0].company === pm.environment.get(\"main_user_company\");",
																	"tests[\"department is ok\"] = jsonData.users[0].department === pm.environment.get(\"main_user_department\");",
																	"tests[\"ip_constraint is ok\"] = jsonData.users[0].ip_constraint === pm.environment.get(\"main_user_ip_constraint\");",
																	"tests[\"restriction is ok\"] = jsonData.users[0].restriction === pm.environment.get(\"main_user_restriction\");",
																	"tests[\"groups is ok\"] = jsonData.users[0].groups === pm.environment.get(\"main_user_groups\");",
																	"tests[\"privileges is ok\"] = jsonData.users[0].privileges === pm.environment.get(\"main_user_privileges\");",
																	"",
																	"// Nettoyage variables ",
																	"pm.environment.unset(\"main_user_attributes\");",
																	""
																]
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d59d8802-00a7-4a9e-83ff-79b93b2a19d4",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"main_user_attributes\", \"\");"
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json, application/x-vm-json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&attributs={{main_user_attributes}}",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"users",
																":user_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "attributs",
																	"value": "{{main_user_attributes}}",
																	"equals": true
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{main_user_id}}"
																}
															]
														},
														"description": "Test: vérifie le précédent PUT"
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Login",
											"item": [
												{
													"name": "Update user login",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "12e5bdda-0b52-4c80-91b3-fceeb97534ab",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"main_user_login\", \"test_main_user_edited\");",
																	"",
																	"",
																	""
																]
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "91834f0d-efad-454b-8a78-fe531741e29e",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"user_id is ok\"] = typeof(jsonData.user_id) === \"string\";"
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json, application/x-vm-json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {},
														"url": {
															"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{token}}&login={{main_user_login}}",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"users",
																":user_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{token}}",
																	"equals": true
																},
																{
																	"key": "login",
																	"value": "{{main_user_login}}",
																	"equals": true
																},
																{
																	"key": "name",
																	"value": "{{main_user_name}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "email",
																	"value": "{{main_user_email}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "company",
																	"value": "{{main_user_company}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "department",
																	"value": "{{main_user_department}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "groups",
																	"value": "{{main_user_groups}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "privileges",
																	"value": "{{main_user_privileges}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "ip_constraint",
																	"value": "{{main_user_ip_constraint}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "password",
																	"value": "{{password}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "password_confirm",
																	"value": "{{password_confirm}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "restriction",
																	"value": "{{main_user_restriction}}",
																	"equals": true,
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{main_user_id}}"
																}
															]
														},
														"description": "Vérifie qu'on ne puisse pas changer le login"
													},
													"response": []
												},
												{
													"name": "Test update user login",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "bc0937a1-e8f9-48ae-ab23-0e4e63167bf5",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"users is ok\"] = jsonData.users instanceof Array",
																	"tests[\"login is ok\"] = jsonData.users[0].login !== pm.environment.get(\"main_user_login\"); // Vérifie que le login n'a pas été changé",
																	"",
																	"// Nettoyage variables ",
																	"pm.environment.unset(\"main_user_attributes\");",
																	""
																]
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d59d8802-00a7-4a9e-83ff-79b93b2a19d4",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"main_user_attributes\", \"\");"
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json, application/x-vm-json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&attributs={{main_user_attributes}}",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"users",
																":user_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "attributs",
																	"value": "{{main_user_attributes}}",
																	"equals": true
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{main_user_id}}"
																}
															]
														},
														"description": "Test: vérifie le précédent PUT"
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"id": "79abfb54-f79b-45db-a801-c22fe280d31c",
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"id": "96a93803-55a4-4870-afd0-9381a7e9909d",
														"type": "text/javascript"
													}
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Groups",
											"item": [
												{
													"name": "Wrong user groups",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "fe817db8-5456-45de-8354-7541788e9fa0",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"error_test\", true);",
																	"pm.environment.set(\"main_wrong_user_groups\", \"255|256\");"
																]
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "8da6693a-083e-4101-a05c-fc9f62916e01",
																"type": "text/javascript",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json, application/x-vm-json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&groups={{main_wrong_user_groups}}",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"users",
																":user_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "login",
																	"value": "{{login}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "name",
																	"value": "{{main_user_name}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "email",
																	"value": "{{main_user_email}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "company",
																	"value": "{{main_user_company}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "department",
																	"value": "{{main_user_department}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "groups",
																	"value": "{{main_wrong_user_groups}}",
																	"equals": true
																},
																{
																	"key": "privileges",
																	"value": "{{main_user_privileges}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "ip_constraint",
																	"value": "{{main_user_ip_constraint}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "password",
																	"value": "{{password}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "password_confirm",
																	"value": "{{password_confirm}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "restriction",
																	"value": "{{main_user_restriction}}",
																	"equals": true,
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{main_user_id}}"
																}
															]
														},
														"description": "Des-associe les groupes"
													},
													"response": []
												},
												{
													"name": "Test wrong user groups",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "67ddcecf-4b94-4e73-a7c9-3aa86880e0fe",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"groups is ok\"] = jsonData.users[0].groups === \"\";",
																	"",
																	"// Nettoyage variables ",
																	"pm.environment.unset(\"main_user_attributes\");",
																	"pm.environment.unset(\"main_wrong_user_groups\");"
																]
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d59d8802-00a7-4a9e-83ff-79b93b2a19d4",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"main_user_attributes\", \"\");"
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json, application/x-vm-json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&attributs={{main_user_attributes}}",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"users",
																":user_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "attributs",
																	"value": "{{main_user_attributes}}",
																	"equals": true
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{main_user_id}}"
																}
															]
														},
														"description": "Test: vérifie le précédent PUT"
													},
													"response": []
												},
												{
													"name": "Empty user groups",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "b6820644-d957-41bb-9b85-855a8dce2fe4",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"main_user_groups\", \"\");"
																]
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "e46cde65-5441-424c-abd1-efeb094ea234",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"user_id is ok\"] = typeof(jsonData.user_id) === \"string\";"
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json, application/x-vm-json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&groups={{main_user_groups}}",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"users",
																":user_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "login",
																	"value": "{{login}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "name",
																	"value": "{{main_user_name}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "email",
																	"value": "{{main_user_email}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "company",
																	"value": "{{main_user_company}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "department",
																	"value": "{{main_user_department}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "groups",
																	"value": "{{main_user_groups}}",
																	"equals": true
																},
																{
																	"key": "privileges",
																	"value": "{{main_user_privileges}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "ip_constraint",
																	"value": "{{main_user_ip_constraint}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "password",
																	"value": "{{password}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "password_confirm",
																	"value": "{{password_confirm}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "restriction",
																	"value": "{{main_user_restriction}}",
																	"equals": true,
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{main_user_id}}"
																}
															]
														},
														"description": "Des-associe les groupes"
													},
													"response": []
												},
												{
													"name": "Test empty user groups",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "a728f348-ecc1-4077-9e93-2e17eca29cac",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"groups is ok\"] = jsonData.users[0].groups === pm.environment.get(\"main_user_groups\");",
																	"",
																	"// Nettoyage variables ",
																	"pm.environment.unset(\"main_user_attributes\");",
																	""
																]
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d59d8802-00a7-4a9e-83ff-79b93b2a19d4",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"main_user_attributes\", \"\");"
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json, application/x-vm-json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&attributs={{main_user_attributes}}",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"users",
																":user_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "attributs",
																	"value": "{{main_user_attributes}}",
																	"equals": true
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{main_user_id}}"
																}
															]
														},
														"description": "Test: vérifie le précédent PUT"
													},
													"response": []
												},
												{
													"name": "Add user groups",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "3022fda0-0d50-4e27-810a-c62b460cd13b",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"main_user_groups\", pm.environment.get(\"groups\"));"
																]
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "91834f0d-efad-454b-8a78-fe531741e29e",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"user_id is ok\"] = typeof(jsonData.user_id) === \"string\";"
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json, application/x-vm-json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&groups={{main_user_groups}}",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"users",
																":user_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "login",
																	"value": "{{login}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "name",
																	"value": "{{main_user_name}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "email",
																	"value": "{{main_user_email}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "company",
																	"value": "{{main_user_company}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "department",
																	"value": "{{main_user_department}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "groups",
																	"value": "{{main_user_groups}}",
																	"equals": true
																},
																{
																	"key": "privileges",
																	"value": "{{main_user_privileges}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "ip_constraint",
																	"value": "{{main_user_ip_constraint}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "password",
																	"value": "{{password}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "password_confirm",
																	"value": "{{password_confirm}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "restriction",
																	"value": "{{main_user_restriction}}",
																	"equals": true,
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{main_user_id}}"
																}
															]
														},
														"description": "Ajoute des groupes existants"
													},
													"response": []
												},
												{
													"name": "Test add user groups",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "5169e31d-6ee9-46c9-bd54-d51daedaed9e",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"users is ok\"] = jsonData.users instanceof Array",
																	"tests[\"users get is ok\"] = jsonData.users.length === 1;",
																	"tests[\"user_id is ok\"] = jsonData.users[0].user_id === parseInt(pm.environment.get(\"main_user_id\"));",
																	"tests[\"name is ok\"] = jsonData.users[0].name === pm.environment.get(\"main_user_name\");",
																	"tests[\"email is ok\"] = jsonData.users[0].email === pm.environment.get(\"main_user_email\");   ",
																	"tests[\"company is ok\"] = jsonData.users[0].company === pm.environment.get(\"main_user_company\");",
																	"tests[\"department is ok\"] = jsonData.users[0].department === pm.environment.get(\"main_user_department\");",
																	"tests[\"ip_constraint is ok\"] = jsonData.users[0].ip_constraint === pm.environment.get(\"main_user_ip_constraint\");",
																	"tests[\"restriction is ok\"] = jsonData.users[0].restriction === pm.environment.get(\"main_user_restriction\");",
																	"tests[\"groups is ok\"] = jsonData.users[0].groups === pm.environment.get(\"main_user_groups\");",
																	"tests[\"privileges is ok\"] = jsonData.users[0].privileges === pm.environment.get(\"main_user_privileges\");",
																	"",
																	"// Nettoyage variables ",
																	"pm.environment.unset(\"main_user_attributes\");",
																	""
																]
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d59d8802-00a7-4a9e-83ff-79b93b2a19d4",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"main_user_attributes\", \"\");"
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json, application/x-vm-json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&attributs={{main_user_attributes}}",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"users",
																":user_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "attributs",
																	"value": "{{main_user_attributes}}",
																	"equals": true
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{main_user_id}}"
																}
															]
														},
														"description": "Test: vérifie le précédent PUT"
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"id": "a457104a-b286-4ef5-9d73-464e7ed8e6aa",
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"id": "7ed7d232-cdc0-4ecb-9ff4-ffa331be65da",
														"type": "text/javascript"
													}
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "IP constraint",
											"item": [
												{
													"name": "Update IP constraint",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "baadf08e-d737-419c-95a2-4e68d002f1ab",
																"type": "text/javascript",
																"exec": [
																	"// Restriction d'une ip innexistante",
																	"pm.environment.set(\"main_user_ip_constraint\", \"192.168.1.255\");"
																]
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "91834f0d-efad-454b-8a78-fe531741e29e",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"user_id is ok\"] = typeof(jsonData.user_id) === \"string\";"
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json, application/x-vm-json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&ip_constraint={{main_user_ip_constraint}}",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"users",
																":user_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "login",
																	"value": "{{login}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "name",
																	"value": "{{main_user_name}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "email",
																	"value": "{{main_user_email}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "company",
																	"value": "{{main_user_company}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "department",
																	"value": "{{main_user_department}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "groups",
																	"value": "{{main_user_groups}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "privileges",
																	"value": "{{main_user_privileges}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "ip_constraint",
																	"value": "{{main_user_ip_constraint}}",
																	"equals": true
																},
																{
																	"key": "password",
																	"value": "{{password}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "password_confirm",
																	"value": "{{password_confirm}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "restriction",
																	"value": "{{main_user_restriction}}",
																	"equals": true,
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{main_user_id}}"
																}
															]
														},
														"description": "Request to update User"
													},
													"response": []
												},
												{
													"name": "Test IP constraint",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "5169e31d-6ee9-46c9-bd54-d51daedaed9e",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"users is ok\"] = jsonData.users instanceof Array",
																	"tests[\"users get is ok\"] = jsonData.users.length === 1;",
																	"tests[\"user_id is ok\"] = jsonData.users[0].user_id === parseInt(pm.environment.get(\"main_user_id\"));",
																	"tests[\"name is ok\"] = jsonData.users[0].name === pm.environment.get(\"main_user_name\");",
																	"tests[\"email is ok\"] = jsonData.users[0].email === pm.environment.get(\"main_user_email\");   ",
																	"tests[\"company is ok\"] = jsonData.users[0].company === pm.environment.get(\"main_user_company\");",
																	"tests[\"department is ok\"] = jsonData.users[0].department === pm.environment.get(\"main_user_department\");",
																	"tests[\"ip_constraint is ok\"] = jsonData.users[0].ip_constraint === pm.environment.get(\"main_user_ip_constraint\");",
																	"tests[\"restriction is ok\"] = jsonData.users[0].restriction === pm.environment.get(\"main_user_restriction\");",
																	"tests[\"groups is ok\"] = jsonData.users[0].groups === pm.environment.get(\"main_user_groups\");",
																	"tests[\"privileges is ok\"] = jsonData.users[0].privileges === pm.environment.get(\"main_user_privileges\");",
																	"",
																	"// Nettoyage variables ",
																	"pm.environment.unset(\"main_user_attributes\");",
																	""
																]
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d59d8802-00a7-4a9e-83ff-79b93b2a19d4",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"main_user_attributes\", \"\");"
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json, application/x-vm-json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&attributs={{main_user_attributes}}",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"users",
																":user_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "attributs",
																	"value": "{{main_user_attributes}}",
																	"equals": true
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{main_user_id}}"
																}
															]
														},
														"description": "Test: vérifie le précédent PUT"
													},
													"response": []
												},
												{
													"name": "Test IP constraint",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "f68450b4-9c07-412d-a421-3a0455a3dc26",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"",
																	"// Sort du mode error_test",
																	"pm.environment.set(\"error_test\", false);"
																]
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "41fcc688-478c-4b9e-b4d3-b06d5fc1ab09",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"error_test\", true);"
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "user",
																	"type": "text",
																	"value": "{{main_user_login}}"
																},
																{
																	"key": "password",
																	"type": "text",
																	"value": "{{main_user_password}}"
																},
																{
																	"key": "duration",
																	"type": "text",
																	"value": "60"
																}
															]
														},
														"url": {
															"raw": "https://{{host}}/rest/vitis/privatetoken",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"privatetoken"
															]
														},
														"description": "Request to get a token"
													},
													"response": []
												},
												{
													"name": "Redo IP constraint",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "7c44ecaa-2387-4fef-875f-d68b8761a5e7",
																"type": "text/javascript",
																"exec": [
																	"// Restriction d'une ip innexistante",
																	"pm.environment.set(\"main_user_ip_constraint\", \"\");"
																]
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "91834f0d-efad-454b-8a78-fe531741e29e",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"user_id is ok\"] = typeof(jsonData.user_id) === \"string\";"
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json, application/x-vm-json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&ip_constraint={{main_user_ip_constraint}}",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"users",
																":user_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "login",
																	"value": "{{login}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "name",
																	"value": "{{main_user_name}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "email",
																	"value": "{{main_user_email}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "company",
																	"value": "{{main_user_company}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "department",
																	"value": "{{main_user_department}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "groups",
																	"value": "{{main_user_groups}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "privileges",
																	"value": "{{main_user_privileges}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "ip_constraint",
																	"value": "{{main_user_ip_constraint}}",
																	"equals": true
																},
																{
																	"key": "password",
																	"value": "{{password}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "password_confirm",
																	"value": "{{password_confirm}}",
																	"equals": true,
																	"disabled": true
																},
																{
																	"key": "restriction",
																	"value": "{{main_user_restriction}}",
																	"equals": true,
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{main_user_id}}"
																}
															]
														},
														"description": "Request to update User"
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Delete User",
									"item": [
										{
											"name": "Delete User",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8d155bf4-6601-4e62-8134-d68da7f69041",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"users is ok\"] = jsonData.users instanceof Array",
															"tests[\"users get is ok\"] = jsonData.users.length === 1;",
															"tests[\"user_id is ok\"] = parseInt(jsonData.users[0].user_id) === parseInt(pm.environment.get(\"main_user_id\"));"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "6c5b4b50-f98b-4b4d-9674-1e5b64da12d7",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users",
														":user_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{main_user_id}}"
														}
													]
												},
												"description": "Request to delete User"
											},
											"response": []
										},
										{
											"name": "Test delete user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8d476dc0-4d5b-4f90-a5d1-acef55fa189f",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"users is ok\"] = jsonData.users instanceof Array",
															"tests[\"users get is ok\"] = jsonData.users.length === 1;",
															"tests[\"user_id is ok\"] = typeof(jsonData.users[0].user_id) === \"undefined\";",
															"tests[\"login is ok\"] = typeof(jsonData.users[0].login) === \"undefined\";",
															"tests[\"name is ok\"] = typeof(jsonData.users[0].name) === \"undefined\";"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d59d8802-00a7-4a9e-83ff-79b93b2a19d4",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_user_attributes\", \"\");"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&attributs={{main_user_attributes}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users",
														":user_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{main_user_attributes}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{main_user_id}}"
														}
													]
												},
												"description": "Test: vérifie le précédent PUT"
											},
											"response": []
										},
										{
											"name": "Add User 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ab1de1b9-e1ce-4d45-9bf7-5d405832d88f",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"user_id is ok\"] = typeof(jsonData.user_id) === \"number\";",
															"",
															"// Variables d'environnement",
															"pm.environment.set(\"main_user_id_1\", jsonData.user_id);"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0bfa03ec-8228-4b1d-83bb-321888b97c76",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_user_login\", \"test_main_user_1\");",
															"pm.environment.set(\"main_user_name\", \"test main user_1\");",
															"pm.environment.set(\"main_user_password\", \"test_main_user_1\");",
															"pm.environment.set(\"main_user_password_confirm\", \"test_main_user_1\");",
															"pm.environment.set(\"main_user_email\",\"test_main_user@test.com\");",
															"pm.environment.set(\"main_user_company\",\"test company\");",
															"pm.environment.set(\"main_user_department\",\"test departement\");",
															"pm.environment.set(\"main_user_groups\", pm.environment.get(\"groups\"));",
															"pm.environment.set(\"main_user_action\", \"\");",
															"pm.environment.set(\"main_user_ip_constraint\", \"\");",
															"pm.environment.set(\"main_user_restriction\", \"%\");",
															"pm.environment.set(\"main_user_privileges\",\"vitis_user\");"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "token",
															"type": "text",
															"value": "{{main_token}}"
														},
														{
															"key": "login",
															"type": "text",
															"value": "{{main_user_login}}"
														},
														{
															"key": "action",
															"type": "text",
															"value": "{{main_user_action}}"
														},
														{
															"key": "name",
															"type": "text",
															"value": "{{main_user_name}}"
														},
														{
															"key": "email",
															"type": "text",
															"value": "{{main_user_email}}"
														},
														{
															"key": "company",
															"type": "text",
															"value": "{{main_user_company}}"
														},
														{
															"key": "department",
															"type": "text",
															"value": "{{main_user_department}}"
														},
														{
															"key": "groups",
															"type": "text",
															"value": "{{main_user_groups}}"
														},
														{
															"key": "privileges",
															"type": "text",
															"value": "{{main_user_privileges}}"
														},
														{
															"key": "ip_constraint",
															"type": "text",
															"value": "{{main_user_ip_constraint}}"
														},
														{
															"key": "password",
															"type": "text",
															"value": "{{main_user_password}}"
														},
														{
															"key": "password_confirm",
															"type": "text",
															"value": "{{main_user_password_confirm}}"
														},
														{
															"key": "restriction",
															"type": "text",
															"value": "{{main_user_restriction}}"
														}
													]
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users"
													]
												},
												"description": "Test: Ajoute l'utilisateur Basic_user"
											},
											"response": []
										},
										{
											"name": "Test add user 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c17e1a0d-35ca-44e0-9999-989d163607e9",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"users is ok\"] = jsonData.users instanceof Array;",
															"tests[\"users get is ok\"] = jsonData.users.length === 1;",
															"tests[\"user_id is ok\"] = jsonData.users[0].user_id === parseInt(pm.environment.get(\"main_user_id_1\"));",
															"tests[\"login is ok\"] = jsonData.users[0].login === pm.environment.get(\"main_user_login\");",
															"tests[\"name is ok\"] = jsonData.users[0].name === pm.environment.get(\"main_user_name\");",
															"tests[\"email is ok\"] = jsonData.users[0].email === pm.environment.get(\"main_user_email\");   ",
															"tests[\"company is ok\"] = jsonData.users[0].company === pm.environment.get(\"main_user_company\");",
															"tests[\"department is ok\"] = jsonData.users[0].department === pm.environment.get(\"main_user_department\");",
															"tests[\"ip_constraint is ok\"] = jsonData.users[0].ip_constraint === pm.environment.get(\"main_user_ip_constraint\");",
															"tests[\"restriction is ok\"] = jsonData.users[0].restriction === pm.environment.get(\"main_user_restriction\");",
															"tests[\"groups is ok\"] = jsonData.users[0].groups === pm.environment.get(\"main_user_groups\");",
															"tests[\"privileges is ok\"] = jsonData.users[0].privileges === pm.environment.get(\"main_user_privileges\");",
															"",
															"// Nettoyage variables ",
															"pm.environment.unset(\"main_user_attributes\");",
															""
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d59d8802-00a7-4a9e-83ff-79b93b2a19d4",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_user_attributes\", \"\");"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&attributs={{main_user_attributes}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users",
														":user_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{main_user_attributes}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{main_user_id_1}}"
														}
													]
												},
												"description": "Test: vérifie le précédent PUT"
											},
											"response": []
										},
										{
											"name": "Add User 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "155f5dc9-c36e-43e8-bfd2-7ce141fd40b7",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"user_id is ok\"] = typeof(jsonData.user_id) === \"number\";",
															"",
															"// Variables d'environnement",
															"pm.environment.set(\"main_user_id_2\", jsonData.user_id);"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "7a4df4c2-494c-4dfa-88fb-02f6fb9ecc52",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_user_login\", \"test_main_user_2\");",
															"pm.environment.set(\"main_user_name\", \"test main user_2\");",
															"pm.environment.set(\"main_user_password\", \"test_main_user_2\");",
															"pm.environment.set(\"main_user_password_confirm\", \"test_main_user_2\");",
															"pm.environment.set(\"main_user_email\",\"test_main_user@test.com\");",
															"pm.environment.set(\"main_user_company\",\"test company\");",
															"pm.environment.set(\"main_user_department\",\"test departement\");",
															"pm.environment.set(\"main_user_groups\", pm.environment.get(\"groups\"));",
															"pm.environment.set(\"main_user_action\", \"\");",
															"pm.environment.set(\"main_user_ip_constraint\", \"\");",
															"pm.environment.set(\"main_user_restriction\", \"%\");",
															"pm.environment.set(\"main_user_privileges\",\"vitis_user\");"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "token",
															"type": "text",
															"value": "{{main_token}}"
														},
														{
															"key": "login",
															"type": "text",
															"value": "{{main_user_login}}"
														},
														{
															"key": "action",
															"type": "text",
															"value": "{{main_user_action}}"
														},
														{
															"key": "name",
															"type": "text",
															"value": "{{main_user_name}}"
														},
														{
															"key": "email",
															"type": "text",
															"value": "{{main_user_email}}"
														},
														{
															"key": "company",
															"type": "text",
															"value": "{{main_user_company}}"
														},
														{
															"key": "department",
															"type": "text",
															"value": "{{main_user_department}}"
														},
														{
															"key": "groups",
															"type": "text",
															"value": "{{main_user_groups}}"
														},
														{
															"key": "privileges",
															"type": "text",
															"value": "{{main_user_privileges}}"
														},
														{
															"key": "ip_constraint",
															"type": "text",
															"value": "{{main_user_ip_constraint}}"
														},
														{
															"key": "password",
															"type": "text",
															"value": "{{main_user_password}}"
														},
														{
															"key": "password_confirm",
															"type": "text",
															"value": "{{main_user_password_confirm}}"
														},
														{
															"key": "restriction",
															"type": "text",
															"value": "{{main_user_restriction}}"
														}
													]
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users"
													]
												},
												"description": "Test: Ajoute l'utilisateur Basic_user"
											},
											"response": []
										},
										{
											"name": "Test add user 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4678b720-87ea-403b-bc7a-07dc8daea33d",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"users is ok\"] = jsonData.users instanceof Array",
															"tests[\"users get is ok\"] = jsonData.users.length === 1;",
															"tests[\"user_id is ok\"] = jsonData.users[0].user_id === parseInt(pm.environment.get(\"main_user_id_2\"));",
															"tests[\"login is ok\"] = jsonData.users[0].login === pm.environment.get(\"main_user_login\");",
															"tests[\"name is ok\"] = jsonData.users[0].name === pm.environment.get(\"main_user_name\");",
															"tests[\"email is ok\"] = jsonData.users[0].email === pm.environment.get(\"main_user_email\");   ",
															"tests[\"company is ok\"] = jsonData.users[0].company === pm.environment.get(\"main_user_company\");",
															"tests[\"department is ok\"] = jsonData.users[0].department === pm.environment.get(\"main_user_department\");",
															"tests[\"ip_constraint is ok\"] = jsonData.users[0].ip_constraint === pm.environment.get(\"main_user_ip_constraint\");",
															"tests[\"restriction is ok\"] = jsonData.users[0].restriction === pm.environment.get(\"main_user_restriction\");",
															"tests[\"groups is ok\"] = jsonData.users[0].groups === pm.environment.get(\"main_user_groups\");",
															"tests[\"privileges is ok\"] = jsonData.users[0].privileges === pm.environment.get(\"main_user_privileges\");",
															"",
															"// Nettoyage variables ",
															"pm.environment.unset(\"main_user_attributes\");",
															""
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d59d8802-00a7-4a9e-83ff-79b93b2a19d4",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_user_attributes\", \"\");"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&attributs={{main_user_attributes}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users",
														":user_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{main_user_attributes}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{main_user_id_2}}"
														}
													]
												},
												"description": "Test: vérifie le précédent PUT"
											},
											"response": []
										},
										{
											"name": "Delete Users",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "70c2b63a-5081-4a32-8ad6-9360b14aad44",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"users is ok\"] = jsonData.users instanceof Array",
															"tests[\"users get is ok\"] = jsonData.users.length === 2;",
															"tests[\"user_id is ok\"] = parseInt(jsonData.users[0].user_id) === parseInt(pm.environment.get(\"main_user_id_1\"));",
															"tests[\"user_id is ok\"] = parseInt(jsonData.users[1].user_id) === parseInt(pm.environment.get(\"main_user_id_2\"));"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "6c5b4b50-f98b-4b4d-9674-1e5b64da12d7",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users?token={{main_token}}&idList={{main_user_id_1}}|{{main_user_id_2}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "idList",
															"value": "{{main_user_id_1}}|{{main_user_id_2}}",
															"equals": true
														}
													]
												},
												"description": "Request to delete User"
											},
											"response": []
										},
										{
											"name": "Test delete users",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "576b76cc-626f-48d7-9b44-3fd42bb5f936",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"users is ok\"] = jsonData.users instanceof Array",
															"tests[\"users get is ok\"] = jsonData.users.length === 1;",
															"tests[\"user_id is ok\"] = typeof(jsonData.users[0].user_id) === \"undefined\";",
															"tests[\"login is ok\"] = typeof(jsonData.users[0].login) === \"undefined\";",
															"tests[\"name is ok\"] = typeof(jsonData.users[0].name) === \"undefined\";",
															""
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d59d8802-00a7-4a9e-83ff-79b93b2a19d4",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_user_attributes\", \"\");"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&attributs={{main_user_attributes}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users",
														":user_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{main_user_attributes}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{main_user_id}}"
														}
													]
												},
												"description": "Test: vérifie le précédent PUT"
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Without rights",
									"item": [
										{
											"name": "Add User",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "89ddb095-a03d-4ca3-90bd-3a486ddcbdaa",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"user_id is ok\"] = typeof(jsonData.user_id) === \"number\";",
															"",
															"// Variables d'environnement",
															"pm.environment.set(\"main_user_id\", jsonData.user_id);"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "5867ae04-2e7c-4a99-b969-9dfdfb3fd2c0",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_user_login\", \"test_main_user\");",
															"pm.environment.set(\"main_user_name\", \"test main user\");",
															"pm.environment.set(\"main_user_password\", \"test_main_user\");",
															"pm.environment.set(\"main_user_password_confirm\", \"test_main_user\");",
															"pm.environment.set(\"main_user_email\",\"test_main_user@test.com\");",
															"pm.environment.set(\"main_user_company\",\"test company\");",
															"pm.environment.set(\"main_user_department\",\"test departement\");",
															"pm.environment.set(\"main_user_groups\", pm.environment.get(\"groups\"));",
															"pm.environment.set(\"main_user_action\", \"\");",
															"pm.environment.set(\"main_user_ip_constraint\", \"\");",
															"pm.environment.set(\"main_user_restriction\", \"%\");",
															"pm.environment.set(\"main_user_privileges\",\"vitis_user\");"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "token",
															"type": "text",
															"value": "{{main_token}}"
														},
														{
															"key": "login",
															"type": "text",
															"value": "{{main_user_login}}"
														},
														{
															"key": "action",
															"type": "text",
															"value": "{{main_user_action}}"
														},
														{
															"key": "name",
															"type": "text",
															"value": "{{main_user_name}}"
														},
														{
															"key": "email",
															"type": "text",
															"value": "{{main_user_email}}"
														},
														{
															"key": "company",
															"type": "text",
															"value": "{{main_user_company}}"
														},
														{
															"key": "department",
															"type": "text",
															"value": "{{main_user_department}}"
														},
														{
															"key": "groups",
															"type": "text",
															"value": "{{main_user_groups}}",
															"disabled": true
														},
														{
															"key": "privileges",
															"type": "text",
															"value": "{{main_user_privileges}}"
														},
														{
															"key": "ip_constraint",
															"type": "text",
															"value": "{{main_user_ip_constraint}}"
														},
														{
															"key": "password",
															"type": "text",
															"value": "{{main_user_password}}"
														},
														{
															"key": "password_confirm",
															"type": "text",
															"value": "{{main_user_password_confirm}}"
														},
														{
															"key": "restriction",
															"type": "text",
															"value": "{{main_user_restriction}}"
														}
													]
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users"
													]
												},
												"description": "Test: Ajoute l'utilisateur Basic_user"
											},
											"response": []
										},
										{
											"name": "Add User (without rights)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ffaad559-40c1-4b24-b978-6d2f37b5e488",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"pm.environment.set(\"error_test\", false);"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "b3e1a2c8-d407-4ed5-b3dc-b85283a9c64a",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"error_test\", true);",
															"pm.environment.set(\"main_user_login\", \"test_main_user\");",
															"pm.environment.set(\"main_user_name\", \"test main user\");",
															"pm.environment.set(\"main_user_password\", \"test_main_user\");",
															"pm.environment.set(\"main_user_password_confirm\", \"test_main_user\");",
															"pm.environment.set(\"main_user_email\",\"test_main_user@test.com\");",
															"pm.environment.set(\"main_user_company\",\"test company\");",
															"pm.environment.set(\"main_user_department\",\"test departement\");",
															"pm.environment.set(\"main_user_groups\", pm.environment.get(\"groups\"));",
															"pm.environment.set(\"main_user_action\", \"\");",
															"pm.environment.set(\"main_user_ip_constraint\", \"\");",
															"pm.environment.set(\"main_user_restriction\", \"%\");",
															"pm.environment.set(\"main_user_privileges\",\"vitis_user\");"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "token",
															"type": "text",
															"value": "{{main_user_token}}"
														},
														{
															"key": "login",
															"type": "text",
															"value": "{{main_user_login}}"
														},
														{
															"key": "action",
															"type": "text",
															"value": "{{main_user_action}}"
														},
														{
															"key": "name",
															"type": "text",
															"value": "{{main_user_name}}"
														},
														{
															"key": "email",
															"type": "text",
															"value": "{{main_user_email}}"
														},
														{
															"key": "company",
															"type": "text",
															"value": "{{main_user_company}}"
														},
														{
															"key": "department",
															"type": "text",
															"value": "{{main_user_department}}"
														},
														{
															"key": "groups",
															"type": "text",
															"value": "{{main_user_groups}}"
														},
														{
															"key": "privileges",
															"type": "text",
															"value": "{{main_user_privileges}}"
														},
														{
															"key": "ip_constraint",
															"type": "text",
															"value": "{{main_user_ip_constraint}}"
														},
														{
															"key": "password",
															"type": "text",
															"value": "{{main_user_password}}"
														},
														{
															"key": "password_confirm",
															"type": "text",
															"value": "{{main_user_password_confirm}}"
														},
														{
															"key": "restriction",
															"type": "text",
															"value": "{{main_user_restriction}}"
														}
													]
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users"
													]
												},
												"description": "Test: Ajoute l'utilisateur Basic_user"
											},
											"response": []
										},
										{
											"name": "Update User (without rights)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "7311d720-0253-4ed5-a1f8-a38fc0b51ccb",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"error_test\", true);",
															"pm.environment.set(\"main_user_name\", \"test main user edited\");",
															"pm.environment.set(\"main_user_email\",\"test_main_user_edited@test.com\");",
															"pm.environment.set(\"main_user_company\",\"test company edited\");",
															"pm.environment.set(\"main_user_department\",\"test departement edited\");",
															"// pm.environment.set(\"main_user_groups\", \"\");",
															"// pm.environment.set(\"main_user_action\", \"\");",
															"pm.environment.set(\"main_user_ip_constraint\", \"\");",
															"pm.environment.set(\"main_user_restriction\", \"%\");",
															"pm.environment.set(\"main_user_privileges\",\"vitis_user|vitis_admin\");",
															"",
															"",
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "60a77984-e09a-4fed-90b6-2f9c71f7bd8b",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"pm.environment.set(\"error_test\", false);"
														]
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_user_token}}&name={{main_user_name}}&email={{main_user_email}}&company={{main_user_company}}&department={{main_user_department}}&groups={{main_user_groups}}&privileges={{main_user_privileges}}&ip_constraint={{main_user_ip_constraint}}&restriction={{main_user_restriction}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users",
														":user_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_user_token}}",
															"equals": true
														},
														{
															"equals": true,
															"key": "login",
															"value": "{{login}}",
															"disabled": true
														},
														{
															"key": "name",
															"value": "{{main_user_name}}",
															"equals": true
														},
														{
															"key": "email",
															"value": "{{main_user_email}}",
															"equals": true
														},
														{
															"key": "company",
															"value": "{{main_user_company}}",
															"equals": true
														},
														{
															"key": "department",
															"value": "{{main_user_department}}",
															"equals": true
														},
														{
															"key": "groups",
															"value": "{{main_user_groups}}",
															"equals": true
														},
														{
															"key": "privileges",
															"value": "{{main_user_privileges}}",
															"equals": true
														},
														{
															"key": "ip_constraint",
															"value": "{{main_user_ip_constraint}}",
															"equals": true
														},
														{
															"equals": true,
															"key": "password",
															"value": "{{password}}",
															"disabled": true
														},
														{
															"equals": true,
															"key": "password_confirm",
															"value": "{{password_confirm}}",
															"disabled": true
														},
														{
															"key": "restriction",
															"value": "{{main_user_restriction}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{main_user_id}}"
														}
													]
												},
												"description": "Request to update User"
											},
											"response": []
										},
										{
											"name": "Delete User (without rights)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3f490ec1-7bff-462b-a95b-69eddb69e456",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"pm.environment.set(\"error_test\", false);"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "5fd7d5e1-44b5-49c7-a9ae-bac03b2d8260",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"error_test\", true);"
														]
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_user_token}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users",
														":user_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_user_token}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{main_user_id}}"
														}
													]
												},
												"description": "Request to delete User"
											},
											"response": []
										},
										{
											"name": "Delete Users (without rights)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b161caa7-dc62-479d-ae9d-7350d550cf68",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"pm.environment.set(\"error_test\", false);"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "c923cb12-612f-498b-be10-763aa7653c97",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"error_test\", true);"
														]
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users?token={{main_user_token}}&idList={{main_user_id_1}}|{{main_user_id_2}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_user_token}}",
															"equals": true
														},
														{
															"key": "idList",
															"value": "{{main_user_id_1}}|{{main_user_id_2}}",
															"equals": true
														}
													]
												},
												"description": "Request to delete User"
											},
											"response": []
										},
										{
											"name": "Delete User",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8d155bf4-6601-4e62-8134-d68da7f69041",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"users is ok\"] = jsonData.users instanceof Array",
															"tests[\"users get is ok\"] = jsonData.users.length === 1;",
															"tests[\"user_id is ok\"] = parseInt(jsonData.users[0].user_id) === parseInt(pm.environment.get(\"main_user_id\"));"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0ecd1b2c-a4fd-4eea-914c-ca7139dc36de",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"error_test\", false);"
														]
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users",
														":user_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{main_user_id}}"
														}
													]
												},
												"description": "Request to delete User"
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "End",
									"item": [
										{
											"name": "Clear variables",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "389d9eba-f674-4158-a810-2fa8928a74fd",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"",
															"// Nettoyage variables ",
															"pm.environment.unset(\"main_user_attributes\");",
															"pm.environment.unset(\"main_user_login\");",
															"pm.environment.unset(\"main_user_name\");",
															"pm.environment.unset(\"main_user_password\");",
															"pm.environment.unset(\"main_user_password_confirm\");",
															"pm.environment.unset(\"main_user_email\");",
															"pm.environment.unset(\"main_user_company\");",
															"pm.environment.unset(\"main_user_department\");",
															"pm.environment.unset(\"main_user_groups\");",
															"pm.environment.unset(\"main_user_action\");",
															"pm.environment.unset(\"main_user_ip_constraint\");",
															"pm.environment.unset(\"main_user_restriction\");",
															"pm.environment.unset(\"main_user_privileges\");",
															"pm.environment.unset(\"main_user_id\");",
															"pm.environment.unset(\"main_user_id_1\");",
															"pm.environment.unset(\"main_user_id_2\");",
															""
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d59d8802-00a7-4a9e-83ff-79b93b2a19d4",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_user_attributes\", \"\");"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&attributs={{main_user_attributes}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users",
														":user_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{main_user_attributes}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{main_user_id}}"
														}
													]
												},
												"description": "Test: vérifie le précédent PUT"
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "5cce1bb7-dc93-4144-bd78-17082902d721",
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"id": "b445141b-bdfe-4a0d-9a2e-609a7fec9d32",
										"type": "text/javascript"
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Groups",
							"description": "",
							"item": [
								{
									"name": "Add Group",
									"description": "",
									"item": [
										{
											"name": "Add Group",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4d3f28aa-1b06-4b30-84c2-14665597ed65",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"group_id is ok\"] = typeof(jsonData.group_id) === \"number\";",
															"",
															"// Variables d'environnement",
															"pm.environment.set(\"main_group_id\", jsonData.group_id);"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "5fb5526c-6ef6-4120-947a-cff95f29b014",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_group_name\", \"test_main_group\");",
															"pm.environment.set(\"main_group_users\", pm.environment.get(\"main_admin_id\"));",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"type": "text"
														},
														{
															"key": "name",
															"value": "{{main_group_name}}",
															"type": "text"
														},
														{
															"key": "users",
															"value": "{{main_group_users}}",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "https://medoc/rest/vitis/groups",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups"
													]
												},
												"description": "Request to add group"
											},
											"response": []
										},
										{
											"name": "Test Add Group",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7498ec22-5a64-45cb-b097-800243e75692",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"group is ok\"] = jsonData.groups instanceof Array;",
															"tests[\"group get is ok\"] = jsonData.groups.length === 1;",
															"tests[\"nb_members is ok\"] = jsonData.groups[0].nb_members === 1;",
															"tests[\"group_id is ok\"] = jsonData.groups[0].group_id === parseInt(pm.environment.get(\"main_group_id\"));",
															"tests[\"name is ok\"] = jsonData.groups[0].name === pm.environment.get(\"main_group_name\");",
															"tests[\"group users is ok\"] = jsonData.groups[0].users === parseInt(pm.environment.get(\"main_admin_id\"));",
															"tests[\"groups users_label is ok\"] = jsonData.groups[0].users_label === pm.environment.get(\"admin_user\");",
															"",
															"// Nettoyage variables ",
															"pm.environment.unset(\"main_group_attributes\");"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "60d69516-4c23-4f99-b52b-4e2bb84bd529",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_group_attributes\", \"\");"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://medoc/rest/vitis/groups/:group_id?token={{main_token}}&attributs={{main_group_attributes}}",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups",
														":group_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{main_group_attributes}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "group_id",
															"value": "{{main_group_id}}"
														}
													]
												},
												"description": "Request to get Group by id"
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Get Group",
									"description": "",
									"item": [
										{
											"name": "Get Group",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "ce205b89-230c-4eae-81de-d4e1f00a3ab0",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_group_attributes\", \"\");"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "47d56fb3-1faf-4777-b32a-dc7b58086759",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"group is ok\"] = jsonData.groups instanceof Array;",
															"tests[\"group get is ok\"] = jsonData.groups.length === 1;",
															"tests[\"nb_members is ok\"] = jsonData.groups[0].nb_members === 1;",
															"tests[\"group_id is ok\"] = jsonData.groups[0].group_id === parseInt(pm.environment.get(\"main_group_id\"));",
															"tests[\"name is ok\"] = jsonData.groups[0].name === pm.environment.get(\"main_group_name\");",
															"tests[\"group users is ok\"] = jsonData.groups[0].users === parseInt(pm.environment.get(\"main_admin_id\"));",
															"tests[\"groups users_label is ok\"] = jsonData.groups[0].users_label === pm.environment.get(\"admin_user\");",
															"",
															"// Nettoyage variables ",
															"pm.environment.unset(\"main_group_attributes\");"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://medoc/rest/vitis/groups/:group_id?token={{main_token}}&attributs={{main_group_attributes}}",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups",
														":group_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{main_group_attributes}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "group_id",
															"value": "{{main_group_id}}"
														}
													]
												},
												"description": "Request to get Group by id"
											},
											"response": []
										},
										{
											"name": "Get Groups",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "c6d5de65-7283-485b-a64d-e9d627132062",
														"type": "text/javascript",
														"exec": [
															"",
															"if(typeof(pm.environment.get(\"get_groups_order_by\")) == \"undefined\")",
															"\tpm.environment.set(\"get_groups_order_by\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_groups_sort_order\")) == \"undefined\")",
															"\tpm.environment.set(\"get_groups_sort_order\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_groups_limit\")) == \"undefined\")",
															"\tpm.environment.set(\"get_groups_limit\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_groups_offset\")) == \"undefined\")",
															"\tpm.environment.set(\"get_groups_offset\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_groups_attributs\")) == \"undefined\")",
															"\tpm.environment.set(\"get_groups_attributs\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_groups_filter\")) == \"undefined\")",
															"\tpm.environment.set(\"get_groups_filter\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_groups_distinct\")) == \"undefined\")",
															"\tpm.environment.set(\"get_groups_distinct\", \"\");"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "c95b4dcd-67a2-4c52-adff-f8f63ec09726",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"groups is ok\"] = jsonData.groups instanceof Array;",
															"",
															"",
															"var iTest = pm.environment.get(\"get_groups_test_number\");",
															"iTest = typeof(iTest) !== \"undefined\" ? parseInt(iTest) : 0;",
															"",
															"// Nettoyage variables ",
															"pm.environment.unset(\"get_groups_order_by\");",
															"pm.environment.unset(\"get_groups_sort_order\");",
															"pm.environment.unset(\"get_groups_limit\");",
															"pm.environment.unset(\"get_groups_offset\");",
															"pm.environment.unset(\"get_groups_attributs\");",
															"pm.environment.unset(\"get_groups_filter\");",
															"pm.environment.unset(\"get_groups_distinct\");"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://medoc/rest/vitis/groups?token={{main_token}}&order_by={{get_groups_order_by}}&sort_order={{get_groups_sort_order}}&limit={{get_groups_limit}}&offset={{get_groups_offset}}&attributs={{get_groups_attributs}}&filter={{get_groups_filter}}&distinct={{get_groups_distinct}}",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "order_by",
															"value": "{{get_groups_order_by}}",
															"equals": true
														},
														{
															"key": "sort_order",
															"value": "{{get_groups_sort_order}}",
															"equals": true
														},
														{
															"key": "limit",
															"value": "{{get_groups_limit}}",
															"equals": true
														},
														{
															"key": "offset",
															"value": "{{get_groups_offset}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{get_groups_attributs}}",
															"equals": true
														},
														{
															"key": "filter",
															"value": "{{get_groups_filter}}",
															"equals": true
														},
														{
															"key": "distinct",
															"value": "{{get_groups_distinct}}",
															"equals": true
														}
													]
												},
												"description": "Request to get Groups"
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Edit Group",
									"description": "",
									"item": [
										{
											"name": "Name",
											"description": "",
											"item": [
												{
													"name": "Update Group Name",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "c30e9619-d9b4-49dd-bec7-bbd830137c97",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false;",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"group_id is ok\"] = typeof(jsonData.group_id) === \"string\";"
																]
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "4a16edea-1f50-48ec-8208-77cfdc2c82a5",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"main_group_name\", \"test_main_group_edited\");",
																	"pm.environment.set(\"main_group_users\", pm.environment.get(\"main_admin_id\"));"
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {},
														"url": {
															"raw": "https://medoc/rest/vitis/groups/:group_id?token={{main_token}}&name={{main_group_name}}&users={{main_group_users}}",
															"protocol": "https",
															"host": [
																"medoc"
															],
															"path": [
																"rest",
																"vitis",
																"groups",
																":group_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "name",
																	"value": "{{main_group_name}}",
																	"equals": true
																},
																{
																	"key": "users",
																	"value": "{{main_group_users}}",
																	"equals": true
																}
															],
															"variable": [
																{
																	"key": "group_id",
																	"value": "{{main_group_id}}"
																}
															]
														},
														"description": "Request to update Group"
													},
													"response": []
												},
												{
													"name": "Test Edit Group Name",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "acc4999d-35be-4923-b6b4-c67d38cc1402",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false;",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"group is ok\"] = jsonData.groups instanceof Array;",
																	"tests[\"group get is ok\"] = jsonData.groups.length === 1;",
																	"tests[\"nb_members is ok\"] = jsonData.groups[0].nb_members === 1;",
																	"tests[\"group_id is ok\"] = jsonData.groups[0].group_id === parseInt(pm.environment.get(\"main_group_id\"));",
																	"tests[\"name is ok\"] = jsonData.groups[0].name === pm.environment.get(\"main_group_name\");",
																	"tests[\"group users is ok\"] = jsonData.groups[0].users === parseInt(pm.environment.get(\"main_admin_id\"));",
																	"tests[\"groups users_label is ok\"] = jsonData.groups[0].users_label === pm.environment.get(\"admin_user\");",
																	"",
																	"// Nettoyage variables ",
																	"pm.environment.unset(\"main_group_attributes\");"
																]
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "60d69516-4c23-4f99-b52b-4e2bb84bd529",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"main_group_attributes\", \"\");"
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {},
														"url": {
															"raw": "https://medoc/rest/vitis/groups/:group_id?token={{main_token}}&attributs={{main_group_attributes}}",
															"protocol": "https",
															"host": [
																"medoc"
															],
															"path": [
																"rest",
																"vitis",
																"groups",
																":group_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "attributs",
																	"value": "{{main_group_attributes}}",
																	"equals": true
																}
															],
															"variable": [
																{
																	"key": "group_id",
																	"value": "{{main_group_id}}"
																}
															]
														},
														"description": "Request to get Group by id"
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Users",
											"description": "",
											"item": [
												{
													"name": "Get private token (User)",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "4d3702a7-8148-4ebb-a5c5-869ac555d44d",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"token is ok\"] = typeof(jsonData.token) === \"string\";",
																	"tests[\"user is ok\"] = typeof(jsonData.user) === \"string\";",
																	"tests[\"validity_date is ok\"] = typeof(jsonData.validity_date) === \"string\";",
																	"tests[\"user_id is ok\"] = typeof(jsonData.user_id) === \"number\";",
																	"tests[\"privileges is ok\"] = jsonData.privileges instanceof Array",
																	"",
																	"// Variables",
																	"pm.environment.set(\"main_user_token\", jsonData.token);",
																	"pm.environment.set(\"main_user_id\",jsonData.user_id);",
																	"",
																	"// Passe directement à la requête Get token",
																	"// postman.setNextRequest(\"Get token\");"
																]
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "6bd8e739-8151-4208-97aa-a70ed4f78467",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"error_test\", false);"
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "user",
																	"type": "text",
																	"value": "{{user_user}}"
																},
																{
																	"key": "password",
																	"type": "text",
																	"value": "{{user_password}}"
																},
																{
																	"key": "duration",
																	"type": "text",
																	"value": "600"
																}
															]
														},
														"url": {
															"raw": "https://{{host}}/rest/vitis/privatetoken",
															"protocol": "https",
															"host": [
																"{{host}}"
															],
															"path": [
																"rest",
																"vitis",
																"privatetoken"
															]
														},
														"description": "Request to get a token"
													},
													"response": []
												},
												{
													"name": "Update Group Users",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "ffbad6a8-2286-4a24-b9f0-fc734c6cc943",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"main_group_name\", \"test_main_group_edited\");"
																]
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "190ecc55-a4d6-4223-9fc6-c9d3ede899a8",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false;",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"group_id is ok\"] = typeof(jsonData.group_id) === \"string\";"
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {},
														"url": {
															"raw": "https://medoc/rest/vitis/groups/:group_id?token={{main_token}}&name={{main_group_name}}&users={{main_admin_id}}|{{main_user_id}}",
															"protocol": "https",
															"host": [
																"medoc"
															],
															"path": [
																"rest",
																"vitis",
																"groups",
																":group_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "name",
																	"value": "{{main_group_name}}",
																	"equals": true
																},
																{
																	"key": "users",
																	"value": "{{main_admin_id}}|{{main_user_id}}",
																	"equals": true
																}
															],
															"variable": [
																{
																	"key": "group_id",
																	"value": "{{main_group_id}}"
																}
															]
														},
														"description": "Request to update Group"
													},
													"response": []
												},
												{
													"name": "Test Edit Group Users",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "ae700ab6-cb3c-46c7-a409-af67069416a5",
																"type": "text/javascript",
																"exec": [
																	"// Test la présence de réponse",
																	"if(pm.response.responseSize === 0){",
																	"    tests['No response'] = false;",
																	"    return null;",
																	"}",
																	"",
																	"// Tests contenu",
																	"var jsonData = pm.response.json();",
																	"tests[\"group is ok\"] = jsonData.groups instanceof Array;",
																	"tests[\"group get is ok\"] = jsonData.groups.length === 1;",
																	"tests[\"nb_members is ok\"] = jsonData.groups[0].nb_members === 2;",
																	"tests[\"group_id is ok\"] = jsonData.groups[0].group_id === parseInt(pm.environment.get(\"main_group_id\"));",
																	"tests[\"name is ok\"] = jsonData.groups[0].name === pm.environment.get(\"main_group_name\");",
																	"var usr = jsonData.groups[0].users.split('|');",
																	"tests[\"users_1 is ok\"] = parseInt(usr[0]) === parseInt(pm.environment.get(\"main_admin_id\"));",
																	"tests[\"users_2 is ok\"] = parseInt(usr[1]) === parseInt(pm.environment.get(\"main_user_id\"));",
																	"var usr_label = jsonData.groups[0].users_label.split(',');",
																	"tests[\"users_label_1 is ok\"] = usr_label[0] === pm.environment.get(\"admin_user\");",
																	"tests[\"users_label_2 is ok\"] = usr_label[1] === pm.environment.get(\"user_user\");",
																	"",
																	"// Nettoyage variables ",
																	"pm.environment.unset(\"main_user_attributes\");"
																]
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "60d69516-4c23-4f99-b52b-4e2bb84bd529",
																"type": "text/javascript",
																"exec": [
																	"pm.environment.set(\"main_group_attributes\", \"\");"
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/xml, application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {},
														"url": {
															"raw": "https://medoc/rest/vitis/groups/:group_id?token={{main_token}}&attributs={{main_group_attributes}}",
															"protocol": "https",
															"host": [
																"medoc"
															],
															"path": [
																"rest",
																"vitis",
																"groups",
																":group_id"
															],
															"query": [
																{
																	"key": "token",
																	"value": "{{main_token}}",
																	"equals": true
																},
																{
																	"key": "attributs",
																	"value": "{{main_group_attributes}}",
																	"equals": true
																}
															],
															"variable": [
																{
																	"key": "group_id",
																	"value": "{{main_group_id}}"
																}
															]
														},
														"description": "Request to get Group by id"
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Delete Group",
									"description": "",
									"item": [
										{
											"name": "Delete Group",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5c89d0f9-a92d-4b83-9907-ff8603b6d5cc",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"group is ok\"] = jsonData.groups instanceof Array;",
															"tests[\"groups get is ok\"] = jsonData.groups.length === 1;",
															"tests[\"grout_id is ok\"] = parseInt(jsonData.groups[0].group_id) === parseInt(pm.environment.get(\"main_group_id\"));"
														]
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://medoc/rest/vitis/groups/:group_id?token={{main_token}}",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups",
														":group_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "group_id",
															"value": "{{main_group_id}}"
														}
													]
												},
												"description": "Request to delete Group"
											},
											"response": []
										},
										{
											"name": "Test Delete group",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "77e48fd0-5063-4fa6-af48-b2e3ffd03fdc",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"groups is ok\"] = jsonData.groups instanceof Array;",
															"tests[\"groups get is ok\"] = jsonData.groups.length === 1;",
															"tests[\"groupe_id is ok\"] = typeof(jsonData.groups[0].group_id) === \"undefined\";",
															"tests[\"login is ok\"] = typeof(jsonData.groups[0].login) === \"undefined\";",
															"tests[\"name is ok\"] = typeof(jsonData.groups[0].name) === \"undefined\";",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://medoc/rest/vitis/groups/:group_id?token={{main_token}}&attributs={{main_group_attributes}}",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups",
														":group_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{main_group_attributes}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "group_id",
															"value": "{{main_group_id}}"
														}
													]
												},
												"description": "Request to get Group by id"
											},
											"response": []
										},
										{
											"name": "Add Group 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "800fc2fd-b8fd-4dcd-a5d2-179f626c8e0e",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_group_name\", \"test_main_group_1\");",
															"pm.environment.set(\"main_group_users\", pm.environment.get(\"main_admin_id\"));",
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "56f65c03-d1e3-48bb-823e-2020452d156f",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"group_id is ok\"] = typeof(jsonData.group_id) === \"number\";",
															"",
															"// Variables d'environnement",
															"pm.environment.set(\"main_group_id_1\", jsonData.group_id);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"type": "text"
														},
														{
															"key": "name",
															"value": "{{main_group_name}}",
															"type": "text"
														},
														{
															"key": "users",
															"value": "{{main_group_users}}",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "https://medoc/rest/vitis/groups",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups"
													]
												},
												"description": "Request to add group"
											},
											"response": []
										},
										{
											"name": "Test Add Group 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "449b174b-8108-49ce-8eda-8e4f6e453541",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"group is ok\"] = jsonData.groups instanceof Array;",
															"tests[\"group get is ok\"] = jsonData.groups.length === 1;",
															"tests[\"nb_members is ok\"] = jsonData.groups[0].nb_members === 1;",
															"tests[\"group_id is ok\"] = jsonData.groups[0].group_id === parseInt(pm.environment.get(\"main_group_id_1\"));",
															"tests[\"name is ok\"] = jsonData.groups[0].name === pm.environment.get(\"main_group_name\");",
															"tests[\"group users is ok\"] = jsonData.groups[0].users === parseInt(pm.environment.get(\"main_admin_id\"));",
															"tests[\"groups users_label is ok\"] = jsonData.groups[0].users_label === pm.environment.get(\"admin_user\");",
															"",
															"// Nettoyage variables ",
															"pm.environment.unset(\"main_group_attributes\");"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "95bd7292-c3db-4d91-b54f-1fb8b89c4614",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_group_attributes\", \"\");"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://medoc/rest/vitis/groups/:group_id?token={{main_token}}&attributs={{main_group_attributes}}",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups",
														":group_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{main_group_attributes}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "group_id",
															"value": "{{main_group_id_1}}"
														}
													]
												},
												"description": "Request to get Group by id"
											},
											"response": []
										},
										{
											"name": "Add Group 2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "86d5ec18-91db-40e4-9629-66c661dd03d1",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_group_name\", \"test_main_group_2\");",
															"pm.environment.set(\"main_group_users\", pm.environment.get(\"main_admin_id\"));",
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "5743171f-6729-4772-bfa2-29b45bf04d00",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"group_id is ok\"] = typeof(jsonData.group_id) === \"number\";",
															"",
															"// Variables d'environnement",
															"pm.environment.set(\"main_group_id_2\", jsonData.group_id);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"type": "text"
														},
														{
															"key": "name",
															"value": "{{main_group_name}}",
															"type": "text"
														},
														{
															"key": "users",
															"value": "{{main_group_users}}",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "https://medoc/rest/vitis/groups",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups"
													]
												},
												"description": "Request to add group"
											},
											"response": []
										},
										{
											"name": "Test Add Group 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "50799549-8852-4f0a-9142-7516450bf89f",
														"type": "text/javascript",
														"exec": [
															"",
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"group is ok\"] = jsonData.groups instanceof Array;",
															"tests[\"group get is ok\"] = jsonData.groups.length === 1;",
															"tests[\"nb_members is ok\"] = jsonData.groups[0].nb_members === 1;",
															"tests[\"group_id is ok\"] = jsonData.groups[0].group_id === parseInt(pm.environment.get(\"main_group_id_2\"));",
															"tests[\"name is ok\"] = jsonData.groups[0].name === pm.environment.get(\"main_group_name\");",
															"tests[\"group users is ok\"] = jsonData.groups[0].users === parseInt(pm.environment.get(\"main_admin_id\"));",
															"tests[\"groups users_label is ok\"] = jsonData.groups[0].users_label === pm.environment.get(\"admin_user\");",
															"",
															"// Nettoyage variables ",
															"pm.environment.unset(\"main_group_attributes\");"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://medoc/rest/vitis/groups/:group_id?token={{main_token}}&attributs={{main_group_attributes}}",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups",
														":group_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{main_group_attributes}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "group_id",
															"value": "{{main_group_id_2}}"
														}
													]
												},
												"description": "Request to get Group by id"
											},
											"response": []
										},
										{
											"name": "Delete Groups",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "17b67430-4c58-4543-aca8-59f8ab10ad9d",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"groups is ok\"] = jsonData.groups instanceof Array;",
															"tests[\"groups get is ok\"] = jsonData.groups.length === 2;",
															"tests[\"group_id is ok\"] = parseInt(jsonData.groups[0].group_id) === parseInt(pm.environment.get(\"main_group_id_1\"));",
															"tests[\"group_id is ok\"] = parseInt(jsonData.groups[1].group_id) === parseInt(pm.environment.get(\"main_group_id_2\"));"
														]
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://medoc/rest/vitis/groups/?token={{main_token}}&idList={{main_group_id_1}}|{{main_group_id_2}}",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups",
														""
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "idList",
															"value": "{{main_group_id_1}}|{{main_group_id_2}}",
															"equals": true
														}
													]
												},
												"description": "Request to delete Group"
											},
											"response": []
										},
										{
											"name": "Test Delete Groups",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "503bd751-6995-4dc4-9acb-801615256aa9",
														"type": "text/javascript",
														"exec": [
															"if(typeof(pm.environment.get(\"get_groups_order_by\")) == \"undefined\")",
															"\tpm.environment.set(\"get_groups_order_by\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_groups_sort_order\")) == \"undefined\")",
															"\tpm.environment.set(\"get_groups_sort_order\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_groups_limit\")) == \"undefined\")",
															"\tpm.environment.set(\"get_groups_limit\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_groups_offset\")) == \"undefined\")",
															"\tpm.environment.set(\"get_groups_offset\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_groups_attributs\")) == \"undefined\")",
															"\tpm.environment.set(\"get_groups_attributs\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_groups_filter\")) == \"undefined\")",
															"\tpm.environment.set(\"get_groups_filter\", \"\");",
															"",
															"if(typeof(pm.environment.get(\"get_groups_distinct\")) == \"undefined\")",
															"\tpm.environment.set(\"get_groups_distinct\", \"\");"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "79758380-cfc6-4fdf-8653-dcc82cb25545",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"groups is ok\"] = jsonData.groups instanceof Array;",
															"",
															"",
															"var iTest = pm.environment.get(\"get_groups_test_number\");",
															"iTest = typeof(iTest) !== \"undefined\" ? parseInt(iTest) : 0;",
															"",
															"// Nettoyage variables ",
															"pm.environment.unset(\"get_groups_order_by\");",
															"pm.environment.unset(\"get_groups_sort_order\");",
															"pm.environment.unset(\"get_groups_limit\");",
															"pm.environment.unset(\"get_groups_offset\");",
															"pm.environment.unset(\"get_groups_attributs\");",
															"pm.environment.unset(\"get_groups_filter\");",
															"pm.environment.unset(\"get_groups_distinct\");"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://medoc/rest/vitis/groups?token={{main_token}}&order_by={{get_groups_order_by}}&sort_order={{get_groups_sort_order}}&limit={{get_groups_limit}}&offset={{get_groups_offset}}&attributs={{get_groups_attributs}}&filter={{get_groups_filter}}&distinct={{get_groups_distinct}}",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "order_by",
															"value": "{{get_groups_order_by}}",
															"equals": true
														},
														{
															"key": "sort_order",
															"value": "{{get_groups_sort_order}}",
															"equals": true
														},
														{
															"key": "limit",
															"value": "{{get_groups_limit}}",
															"equals": true
														},
														{
															"key": "offset",
															"value": "{{get_groups_offset}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{get_groups_attributs}}",
															"equals": true
														},
														{
															"key": "filter",
															"value": "{{get_groups_filter}}",
															"equals": true
														},
														{
															"key": "distinct",
															"value": "{{get_groups_distinct}}",
															"equals": true
														}
													]
												},
												"description": "Request to get Groups"
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Without rights",
									"description": "",
									"item": [
										{
											"name": "Add Group",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "464146c6-d41b-45a4-95eb-32262cf91d8a",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"main_group_name\", \"test_main_group\");",
															"pm.environment.set(\"main_group_users\", pm.environment.get(\"main_admin_id\"));",
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "edc231d8-5db4-49be-9420-1c971f1c7576",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"group_id is ok\"] = typeof(jsonData.group_id) === \"number\";",
															"",
															"// Variables d'environnement",
															"pm.environment.set(\"main_group_id\", jsonData.group_id);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"type": "text"
														},
														{
															"key": "name",
															"value": "{{main_group_name}}",
															"type": "text"
														},
														{
															"key": "users",
															"value": "{{main_group_users}}",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "https://medoc/rest/vitis/groups",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups"
													]
												},
												"description": "Request to add group"
											},
											"response": []
										},
										{
											"name": "Add Group (without rights)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "363230a2-97ab-4c98-b741-0c9cbe2dbeca",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"error_test\", true);",
															"pm.environment.set(\"main_group_name\", \"test_main_group\");",
															"pm.environment.set(\"main_group_users\", pm.environment.get(\"main_admin_id\"));"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "2b29a642-cf24-4326-8f04-d41853fa172c",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"pm.environment.set(\"error_test\", false);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "token",
															"value": "{{main_user_token}}",
															"type": "text"
														},
														{
															"key": "name",
															"value": "{{main_group_name}}",
															"type": "text"
														},
														{
															"key": "users",
															"value": "{{main_group_users}}",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "https://medoc/rest/vitis/groups",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups"
													]
												},
												"description": "Request to add group"
											},
											"response": []
										},
										{
											"name": "Update Group (without rights)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "ab7e273f-023e-4fc8-8ea6-f4923210f057",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"error_test\", true);",
															"pm.environment.set(\"main_group_name\", \"test_main_group_edited\");",
															"pm.environment.set(\"main_group_users\", pm.environment.get(\"main_admin_id\"));"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "29bd1c21-efb6-425c-8e62-eb898ab5f333",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"pm.environment.set(\"error_test\", false);"
														]
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://medoc/rest/vitis/groups/:group_id?token={{main_user_token}}&name={{main_group_name}}&users={{main_group_users}}",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups",
														":group_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_user_token}}",
															"equals": true
														},
														{
															"key": "name",
															"value": "{{main_group_name}}",
															"equals": true
														},
														{
															"key": "users",
															"value": "{{main_group_users}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "group_id",
															"value": "{{main_group_id}}"
														}
													]
												},
												"description": "Request to update Group"
											},
											"response": []
										},
										{
											"name": "Delete Group (without rights)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "d3cf9235-a81d-4f16-bfce-cbe78e378f37",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"error_test\", true);"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "79da46c5-c354-407d-86f4-a586613d1b12",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"pm.environment.set(\"error_test\", false);"
														]
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://medoc/rest/vitis/groups/:group_id?token={{main_user_token}}",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups",
														":group_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_user_token}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "group_id",
															"value": "{{main_group_id}}"
														}
													]
												},
												"description": "Request to delete Group"
											},
											"response": []
										},
										{
											"name": "Delete Groups (without rights)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b7c11674-5c7e-45d8-b098-72787a4f8a0f",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"pm.environment.set(\"error_test\", false);"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "6ae340a5-b24e-48e8-a89b-1b148d60a9ba",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set(\"error_test\", true);"
														]
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://medoc/rest/vitis/groups/?token={{main_user_token}}&idList={{main_group_id}}",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups",
														""
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_user_token}}",
															"equals": true
														},
														{
															"key": "idList",
															"value": "{{main_group_id}}",
															"equals": true
														}
													]
												},
												"description": "Request to delete Group"
											},
											"response": []
										},
										{
											"name": "Delete Group",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "92e748e0-34cb-4506-ad2f-ae68c28bbadf",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "34fe9d35-a02f-43bf-ab79-95206f36dd5c",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false;",
															"    return null;",
															"}",
															"",
															"// Tests contenu",
															"var jsonData = pm.response.json();",
															"tests[\"groups is ok\"] = jsonData.groups instanceof Array;",
															"tests[\"groups get is ok\"] = jsonData.groups.length === 1;",
															"tests[\"group_id is ok\"] = parseInt(jsonData.groups[0].group_id) === parseInt(pm.environment.get(\"main_group_id\"));"
														]
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://medoc/rest/vitis/groups/:group_id?token={{main_token}}",
													"protocol": "https",
													"host": [
														"medoc"
													],
													"path": [
														"rest",
														"vitis",
														"groups",
														":group_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "group_id",
															"value": "{{main_group_id}}"
														}
													]
												},
												"description": "Request to delete Group"
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "End",
									"description": "",
									"item": [
										{
											"name": "Clear variables copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "353d7c2f-b228-4e7e-85de-02fe9e501281",
														"type": "text/javascript",
														"exec": [
															"// Test la présence de réponse",
															"if(pm.response.responseSize === 0){",
															"    tests['No response'] = false",
															"    return null;",
															"}",
															"",
															"// Nettoyage variables ",
															"pm.environment.unset(\"main_group_name\");",
															"pm.environment.unset(\"main_group_id\");",
															"pm.environment.unset(\"main_group_id_1\");",
															"pm.environment.unset(\"main_group_id_2\");",
															"pm.environment.unset(\"main_group_users\");",
															"pm.environment.unset(\"main_group_attributes\");"
														]
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "31d23a01-0bad-48cb-a457-165b1251b24f",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml, application/json, application/x-vm-json"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {},
												"url": {
													"raw": "https://{{host}}/rest/vitis/users/:user_id?token={{main_token}}&attributs={{main_user_attributes}}",
													"protocol": "https",
													"host": [
														"{{host}}"
													],
													"path": [
														"rest",
														"vitis",
														"users",
														":user_id"
													],
													"query": [
														{
															"key": "token",
															"value": "{{main_token}}",
															"equals": true
														},
														{
															"key": "attributs",
															"value": "{{main_user_attributes}}",
															"equals": true
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{main_user_id}}"
														}
													]
												},
												"description": "Test: vérifie le précédent PUT"
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "End",
							"item": [
								{
									"name": "Get token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e8e65cf1-7126-45b8-8add-da68775ec376",
												"type": "text/javascript",
												"exec": [
													"pm.environment.unset(\"main_token\");",
													"pm.environment.unset(\"main_admin_id\");",
													"pm.environment.unset(\"main_user_token\");",
													"pm.environment.unset(\"main_user_id\");"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/xml, application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{host}}/rest/vitis/privatetoken?token={{main_token}}",
											"protocol": "https",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"vitis",
												"privatetoken"
											],
											"query": [
												{
													"key": "token",
													"value": "{{main_token}}",
													"equals": true
												}
											]
										},
										"description": "Vide les variables d'environnement utilisées pendant le scénario"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "75515896-47e6-47c6-b56f-8f793ca1c20e",
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"id": "5c7df45c-6925-4881-a22d-ffecac3c9bfd",
										"type": "text/javascript"
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"id": "d5186e34-d5d9-445e-8f14-95de81ba351e",
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"id": "5180ab8e-fb54-4fdf-b85a-44a8033da992",
								"type": "text/javascript"
							}
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"id": "6e90210d-4e73-4fd5-a426-46f2e64831aa",
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.responseSize === 0){",
							"    tests['No response'] = false",
							"    return null;",
							"}",
							"",
							"/**",
							" * Si ce paramètre vaut true, cela veut dire que ",
							" * le test doit de générer une erreur ",
							" */",
							"var bErrorTest = pm.environment.get(\"error_test\");",
							"bErrorTest = (bErrorTest === false) || (bErrorTest === \"false\") ? false : true;",
							"",
							"var jsonData = pm.response.json();",
							"",
							"if(!bErrorTest){",
							"    ",
							"    pm.test(\"Status equal 1\", function () {",
							"        pm.expect(jsonData.status).to.eql(1);",
							"    });",
							"    pm.test(\"Status code is 200\", function () {",
							"        pm.response.to.have.status(200);",
							"    });",
							"",
							"    if(jsonData.status === 0){",
							"        if (jsonData.errorMessage !== null){",
							"            var ErrorMess = jsonData.errorMessage;",
							"            tests[ErrorMess]=false;",
							"        }",
							"        else{",
							"            var ErrorMess = jsonData.error;",
							"            tests[ErrorMess]=false;",
							"        }",
							"    }",
							"}else{",
							"    pm.test(\"Status equal 0\", function () {",
							"        pm.expect(jsonData.status).to.eql(0);",
							"    });",
							"    if(jsonData.status === 0){",
							"        if (jsonData.errorMessage !== null){",
							"            var ErrorMess = jsonData.errorMessage;",
							"            tests[ErrorMess]=true;",
							"        }",
							"        else{",
							"            var ErrorMess = jsonData.error;",
							"            tests[ErrorMess]=true;",
							"        }",
							"    }",
							"}",
							"",
							"// Repasse en mode normal",
							"pm.environment.set(\"error_test\", false);"
						],
						"id": "7f34ae6d-6d33-4184-802c-6a1795773b40",
						"type": "text/javascript"
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"exec": [
					""
				],
				"id": "632a9c4e-f152-444b-a1ea-93252a40c619",
				"type": "text/javascript"
			}
		},
		{
			"listen": "test",
			"script": {
				"exec": [
					""
				],
				"id": "e0f13f96-1690-48cf-b8b6-2ef4a97de154",
				"type": "text/javascript"
			}
		}
	]
}